cout << setprecision(3);
# Suma
# ====
(0, 0) + (0, 0) = (0, 0).
(0, 0) + (1, 0) = (1, 0).
(1, 0) + (0, 0) = (1, 0).
(0, 0) + (0, 0) = (0, 0).
(1, 0) + (-1, 0) = (0, 0).
(0, -1) + (0, 1) = (0, 0).
(9, 2) + (1, 8) = (10, 10).
# Resta
# =====
(0, 0) - (0, 0) = (0, 0).
(1, 0) - (0, 0) = (1, 0).
(0, 0) - (1, 0) = (-1, 0).
(0, 0) - (0, 0) = (0, 0).
(0, 0) - (0, 0) = (0, 0).
(1, 1) - (1, 1) = (0, 0).
(10, 10) - (5, 5) = (5, 5).
# Producto
# ========
(1, 0) * (1, 0) = (1, 0).
(2, 0) * (1, 0) = (2, 0).
(1, 1) * (2, 0) = (2, 2).
(1e+03, 1e+03) * (0, 0) = (0, 0).
(10, 0) * (0.1, 0.1) = (1, 1).
(2, -1) * (-2, 4) = (0, 10).
# Cociente
# ========
(0, 0) / (1, 0) = (0, 0).
(1, 0) / (1, 0) = (1, 0).
(1, 1) / (1, 1) = (1, 0).
(10, 10) / (2, 0) = (5, 5).
(1, -1) / (0.1, 0) = (10, -10).
(10, 1) / (0, 1) = (1, -10).
(10, 10) / (3, 0) = (3.33, 3.33).
(10, 10) / (0, 3) = (3.33, -3.33).
# Errores de lectura
# ==================
# + x
error: en el primer argumento.
# + ()
error: en el primer argumento.
# + (1)
error: en el primer argumento.
# + (1,)
error: en el primer argumento.
# + (1,1x
error: en el primer argumento.
# + 1,1
error: en el segundo argumento.
# + (1,1) x
error: en el segundo argumento.
# + (1,1) ()
error: en el segundo argumento.
# +
error: en el primer argumento.
